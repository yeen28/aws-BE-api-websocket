name: Java CI with Gradle and DockerHub Push

on:
  push:
  pull_request:
    branches: [ "*" ]

jobs:

  gradle-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: api
          - service: websocket
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4  # Gradle dependency 캐싱 설정(테스트 속도 향상)
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ matrix.service }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-${{ matrix.service }}-

      - name: Grant execute permission for gradlew
        working-directory: ./${{ matrix.service }}
        run: chmod +x gradlew

      - name: Build with Gradle
        working-directory: ./${{ matrix.service }}
        run: ./gradlew build

  build-and-push-dockerhub:
    needs: gradle-build
    runs-on: ubuntu-latest
    # master 브랜치 또는 release- 로 시작하는 브랜치에 push 될 때만 실행됩니다.
    if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/heads/release-'))
    strategy:
      matrix:
        include:
          - service: api
            repository: yestar28/aws-nameless-api
          - service: websocket
            repository: yestar28/aws-nameless-websocket
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short=10 HEAD)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.repository }}
          tags: |
            type=raw,value=${{ env.sha_short }}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{ matrix.service }}/Dockerfile.${{ matrix.service }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}